#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Trabalho2
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
dig : [0-9]
dig2: [1-9]
min : [a-z]
mai : [A-Z]
under:_
begin: {mai} | {min}
input:({under}? ({dig} | {begin}))*
PI:{dig}+
PF:\.{dig}+
OG:d {dig2} {dig}*

#Tokens
//identificador : {letra}+ {dig}*

//1 - a IDENTIFICADOR
identificador:{begin}+ {dig}* ({input}) ({dig}|{begin})*


//b - contante int
cint:{PI} | {dig}* {dig2}+ {OG}


//c - constante float
cfloat:{PI}? {PF} | {PI}? \. {dig}* {dig2} {OG}


//d - constante char
cchar:\\(s|t|n)


//e - constante string
cstring:\"[^\" \n \\]* \"


//f - comentario de linha
linha:!#.*                                                   


//g - comentario de bloco
bloco:!\[ \n ([^\[ \]]*\n)? \]                              


//palavras reservadas: boolean break
pr_boolean = identificador: "boolean"
pr_break = identificador: "break"
pr_char = identificador: "char"
pr_do = identificador: "do"
pr_else = identificador: "else"
pr_end = identificador: "end" 
pr_false = identificador: "false" 
pr_float = identificador: "float"
pr_fun = identificador: "fun"
pr_if = identificador: "if"
pr_int = identificador: "int"
pr_main = identificador: "main" 
pr_print = identificador: "print"
pr_println = identificador: "println"
pr_readln = identificador: "readln"
pr_string = identificador: "string"
pr_true = identificador: "true"
pr_val = identificador: "val"
pr_var = identificador: "var"
pr_while = identificador: "while" 

//simbolos especiais: : , ; = ( ) { } == !=

"!"
"=="
"="
"!="
":"
"," 
";" 
"(" 
")" 
"{" 
"}" 
"<" 
">" 
"+" 
"-" 
"*" 
"/" 
"%"
"&&"
"||"

//reconhecer e ignorar caracteres de formatacao
:[\s\t\n]

//reconhecer e ignorar comentarios
//:! @@ [^\n]*
//:! \{ [^\}]* \}


#NonTerminals
<programa>
<lista_comando>
<lista_de_identificadores>
<lista_de_instrucoes>
<lista_expressao>
<comando>
<comando_atribuicao>
<comando_entrada>
<comando_repeticao>
<comando_saida>
<comando_selecao> 
<selecao_opcional>
<declaracao_constantes>
<declaracao_variaveis>
<valor>
<tipo>

<expressao>
<expressao_>
<elemento>

<relacional>
<relacional_>
<operador_relacional>

<aritmetica>
<aritmetica_>

<termo>
<termo_>

<fator>

<entrada_opcional>

<lista_de_identificadores1>
<lista_de_identificadores2>
<lista_de_identificadores3>
<lista_comando1>
<lista_expressao1>
<lista_de_instrucoes1>
<lista_de_instrucoes2>
#Grammar
<programa> ::= #15 pr_fun pr_main "{" <lista_de_instrucoes> "}" #16 ;

<lista_de_instrucoes> ::= <lista_de_instrucoes2><lista_de_instrucoes1> ;
<lista_de_instrucoes1> ::=   <lista_de_instrucoes> | î ;
<lista_de_instrucoes2> ::= <declaracao_constantes> | <declaracao_variaveis> | <comando> ;

<lista_de_identificadores1> ::= ":" <tipo> #30 #31 <lista_de_identificadores2> | "=" <valor> ";" ;

<lista_de_identificadores2> ::= "=" <valor> ";" | ";" ;

<declaracao_constantes> ::= pr_val<lista_de_identificadores><lista_de_identificadores1> ;

<declaracao_variaveis> ::= pr_var<lista_de_identificadores><lista_de_identificadores1> ;
 
<comando> ::= <comando_atribuicao> | <comando_entrada> | <comando_saida> | <comando_selecao> | <comando_repeticao> | pr_break ";" ;
<lista_comando> ::= <comando><lista_comando1> ;
<lista_comando1> ::= <lista_comando> | î ;
 
<comando_entrada> ::= pr_readln "(" <entrada_opcional> <lista_de_identificadores> #35 ")" ";" ;
<entrada_opcional> ::= cstring #22 #14 "," | î ;
 
<comando_saida> ::= pr_print "(" <lista_expressao> ")" ";" | pr_println "(" <lista_expressao> ")" #17 ";" ;
<lista_expressao> ::= <expressao> #14 <lista_expressao1> ;
<lista_expressao1> ::= ","<lista_expressao> | î ;
 
<comando_selecao> ::= pr_if"(" <expressao> ")" #24 <lista_comando> <selecao_opcional> pr_end #26 ";" ;
<selecao_opcional> ::= pr_else #25 <lista_comando> | î ;
 
<comando_repeticao> ::= #27 pr_do <lista_comando> pr_while "(" <expressao> ")" #28 pr_end";" ;
 
<tipo> ::= pr_int | pr_float | pr_char | pr_string | pr_boolean ;
 
<valor> ::= cint | cfloat | cchar | cstring | pr_true | pr_false ;
 
<comando_atribuicao> ::= identificador #32 "=" <expressao> #34 ";" ;

<lista_de_identificadores> ::= identificador #32 <lista_de_identificadores3> ;
<lista_de_identificadores3> ::= î | "," <lista_de_identificadores> ;

<expressao> ::= <elemento> <expressao_> ;
<expressao_> ::= î | "&&" <elemento> #18 <expressao_> | "||" <elemento> #19 <expressao_> ;
<elemento> ::= <relacional> | pr_true #11 | pr_false #12 | "!" <elemento> #13 ;

<relacional> ::= <aritmetica> <relacional_> ;
<relacional_> ::= î | <operador_relacional> #9 <aritmetica> #10 ;
<operador_relacional> ::= "==" | "!=" | "<" | ">" ;

<aritmetica> ::= <termo> <aritmetica_> ;
<aritmetica_> ::= î | "+" <termo> #1 <aritmetica_> | "-" <termo> #2 <aritmetica_> ;

<termo> ::= <fator> <termo_> ;
<termo_> ::= î | "*" <fator> #3 <termo_>
 | "/" <fator> #4 <termo_>
 | "%" <fator> #20 <termo_> ;

<fator> ::= identificador #33 |
 cint 		#5 |
 cfloat 		#6 |
 cchar 		#21 |
 cstring 	#22 |
 "(" <expressao> ")" |
 "+" <fator> 	#7 |
 "-" <fator>  	#8 ;

